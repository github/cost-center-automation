name: GitHub Copilot Cost Center Automation

on:
  schedule:
    # Run every 6 hours (adjust as needed)
    - cron: '0 */6 * * *'
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:
    inputs:
      mode:
        description: 'Run mode'
        required: true
        default: 'incremental'
        type: choice
        options:
          - incremental
          - full

jobs:
  update-cost-centers:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: pip install -r requirements.txt
    
    - name: Detect enterprise and show config (debug)
      env:
        GITHUB_TOKEN: ${{ secrets.COPILOT_GITHUB_TOKEN }}
      run: |
        # Extract enterprise from repository owner (works for enterprise-owned repos)
        ENTERPRISE_NAME="${{ github.repository_owner }}"
        echo "Auto-detected enterprise: $ENTERPRISE_NAME"
        echo "Repository: ${{ github.repository }}"
        echo "Setting GITHUB_ENTERPRISE environment variable..."
        echo "GITHUB_ENTERPRISE=$ENTERPRISE_NAME" >> $GITHUB_ENV
        echo "Enterprise from config file:"
        grep enterprise config/config.yaml || echo "No enterprise line found"
    
    - name: Run incremental cost center update
      if: github.event.inputs.mode != 'full'
      env:
        GITHUB_TOKEN: ${{ secrets.COPILOT_GITHUB_TOKEN }}
      run: |
        echo "Using enterprise: $GITHUB_ENTERPRISE"
        python main.py --create-cost-centers --assign-cost-centers --incremental --mode apply --yes --summary-report --verbose
    
    - name: Run full cost center update  
      if: github.event.inputs.mode == 'full'
      env:
        GITHUB_TOKEN: ${{ secrets.COPILOT_GITHUB_TOKEN }}
      run: |
        echo "Using enterprise: $GITHUB_ENTERPRISE"
        python main.py --create-cost-centers --assign-cost-centers --mode apply --yes --summary-report --verbose
    
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cost-center-logs-${{ github.run_number }}
        path: logs/
        retention-days: 30
    
    - name: Check for failures and notify
      if: failure()
      run: |
        echo "::error::Cost center automation failed. Check the logs for details."